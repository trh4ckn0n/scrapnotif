name: Notifications Telegram

on:
  watch:
    types: [started, created]  # Lorsqu'une personne suit votre profil ou star un repo
  fork:
    types: [created]   # Lorsqu'un utilisateur fork votre repo
  workflow_dispatch:
  
jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: R√©cup√©rer les √©v√©nements GitHub
        run: |
          echo "√âv√©nement GitHub d√©clench√© par : ${{ github.actor }}"
          echo "Type d'√©v√©nement : ${{ github.event_name }}"
          echo "Action : ${{ github.event.action }}"

      - name: Obtenir les informations de l'utilisateur GitHub
        run: |
          USERNAME="${{ github.actor }}"
          
          # R√©cup√©ration des informations de l'utilisateur
          USER_NAME=$(curl -s "https://api.github.com/users/${USERNAME}" | jq -r '.name')
          USER_LOGIN=$(curl -s "https://api.github.com/users/${USERNAME}" | jq -r '.login')
          USER_AVATAR=$(curl -s "https://api.github.com/users/${USERNAME}" | jq -r '.avatar_url')

          echo "Nom de l'utilisateur : $USER_NAME"
          echo "Identifiant GitHub : $USER_LOGIN"
          echo "Avatar URL : $USER_AVATAR"

      - name: Envoi de la notification Telegram
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          ACTION_TYPE="${{ github.event_name }}"
          ACTION="${{ github.event.action }}"
          REPOSITORY="${{ github.repository }}"

          # V√©rification que l'URL de l'avatar existe avant de t√©l√©charger l'image
          if [ -n "$USER_AVATAR" ]; then
            # T√©l√©chargement de l'avatar de l'utilisateur
            AVATAR_PATH="/tmp/avatar.jpg"
            curl -s $USER_AVATAR -o $AVATAR_PATH
          else
            echo "Pas d'URL d'avatar disponible pour l'utilisateur $USER_LOGIN."
          fi

          # Message √† envoyer sur Telegram
          MESSAGE="üîî Nouvelle activit√© GitHub :

          - Action : ${ACTION_TYPE}
          - Type d'action : ${ACTION}
          - Utilisateur : ${USER_NAME} (@${USER_LOGIN}) 
          - R√©f√©rentiel : ${REPOSITORY}

          - Profil utilisateur : https://github.com/${USER_LOGIN}
          üëâ Allez voir votre profil GitHub pour plus de d√©tails : https://github.com/${USER_LOGIN}"

          # Envoi du message avec ou sans avatar via Telegram API
          if [ -n "$USER_AVATAR" ]; then
            curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendPhoto" \
                 -d chat_id="${CHAT_ID}" \
                 -d caption="${MESSAGE}" \
                 -F photo=@"$AVATAR_PATH"
          else
            curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" \
                 -d chat_id="${CHAT_ID}" \
                 -d text="${MESSAGE}"
          fi
